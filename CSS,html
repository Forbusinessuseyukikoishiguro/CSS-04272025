<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSSボックスモデル視覚化デモ</title>
    <style>
        body {
            font-family: 'Segoe UI', 'Meiryo', sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
        }
        
        h1, h2, h3 {
            color: #2c3e50;
        }
        
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .demo-section {
            margin-bottom: 40px;
        }
        
        .box-model-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 20px 0;
        }
        
        .box-model-demo {
            position: relative;
            width: 500px;
            height: 300px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .margin-box {
            background-color: #ffcc80;
            position: absolute;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .border-box {
            background-color: #80cbc4;
            position: relative;
            width: 80%;
            height: 80%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .padding-box {
            background-color: #9fa8da;
            position: relative;
            width: 80%;
            height: 80%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .content-box {
            background-color: #ef9a9a;
            position: relative;
            width: 80%;
            height: 80%;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        }
        
        .box-label {
            position: absolute;
            font-weight: bold;
            color: rgba(0, 0, 0, 0.7);
        }
        
        .margin-label {
            top: 10px;
            left: 10px;
        }
        
        .border-label {
            top: 10px;
            left: 10px;
        }
        
        .padding-label {
            top: 10px;
            left: 10px;
        }
        
        .content-label {
            position: relative;
            text-align: center;
            font-weight: bold;
        }
        
        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
        }
        
        .control-group {
            flex: 1;
            min-width: 200px;
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 5px;
        }
        
        .control-group h3 {
            margin-top: 0;
            font-size: 16px;
        }
        
        label {
            display: block;
            margin: 5px 0;
        }
        
        input[type="range"] {
            width: 100%;
        }
        
        .dimension-display {
            font-family: monospace;
            padding: 10px;
            background-color: #f0f0f0;
            border-radius: 5px;
            margin-top: 20px;
        }
        
        .box-sizing-demo {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 40px;
        }
        
        .box-demo {
            flex: 1;
            min-width: 300px;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        
        .demo-box {
            width: 200px;
            height: 100px;
            background-color: #ef9a9a;
            margin: 20px auto;
            padding: 20px;
            border: 10px solid #9fa8da;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .content-box-demo {
            box-sizing: content-box;
        }
        
        .border-box-demo {
            box-sizing: border-box;
        }
        
        .measurement-label {
            position: absolute;
            font-size: 12px;
            color: #333;
            background-color: rgba(255, 255, 255, 0.7);
            padding: 2px 5px;
            border-radius: 3px;
        }
        
        .width-label {
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
        }
        
        .total-width-label {
            top: -25px;
            left: 50%;
            transform: translateX(-50%);
        }
        
        .comparison-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        
        .comparison-table th, .comparison-table td {
            border: 1px solid #ddd;
            padding: 8px 12px;
            text-align: left;
        }
        
        .comparison-table th {
            background-color: #f2f2f2;
        }
        
        .note {
            background-color: #e8f4f8;
            padding: 15px;
            border-left: 5px solid #3498db;
            margin: 20px 0;
            border-radius: 0 5px 5px 0;
        }
        
        .example-section {
            margin-top: 30px;
        }
        
        .example-boxes {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 20px;
            margin: 20px 0;
        }
        
        .example-box {
            flex: 1;
            min-width: 150px;
            background-color: #fff;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            text-align: center;
        }
        
        .example-toggle {
            display: block;
            margin: 20px auto;
            padding: 10px 15px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        
        .example-toggle:hover {
            background-color: #2980b9;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>CSSボックスモデル視覚化デモ</h1>
        
        <div class="demo-section">
            <h2>ボックスモデルとは</h2>
            <p>ウェブページ上のすべての要素はボックスとして扱われます。CSSボックスモデルでは、それぞれの要素は以下の層から構成されています：</p>
            
            <div class="box-model-container">
                <div class="box-model-demo">
                    <div class="margin-box">
                        <span class="box-label margin-label">マージン (Margin)</span>
                        <div class="border-box">
                            <span class="box-label border-label">ボーダー (Border)</span>
                            <div class="padding-box">
                                <span class="box-label padding-label">パディング (Padding)</span>
                                <div class="content-box">
                                    <span class="content-label">コンテント<br>(Content)</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="controls">
                    <div class="control-group">
                        <h3>マージン調整</h3>
                        <label>
                            マージンサイズ: <span id="margin-value">10</span>%
                            <input type="range" id="margin-slider" min="0" max="30" value="10">
                        </label>
                    </div>
                    <div class="control-group">
                        <h3>ボーダー調整</h3>
                        <label>
                            ボーダーサイズ: <span id="border-value">10</span>%
                            <input type="range" id="border-slider" min="0" max="30" value="10">
                        </label>
                    </div>
                    <div class="control-group">
                        <h3>パディング調整</h3>
                        <label>
                            パディングサイズ: <span id="padding-value">10</span>%
                            <input type="range" id="padding-slider" min="0" max="30" value="10">
                        </label>
                    </div>
                </div>
                
                <div class="dimension-display">
                    <div id="dimensions-text">
                        コンテント: <span id="content-width">?</span> x <span id="content-height">?</span>px |
                        パディング含む: <span id="padding-width">?</span> x <span id="padding-height">?</span>px |
                        ボーダー含む: <span id="border-width">?</span> x <span id="border-height">?</span>px |
                        マージン含む: <span id="margin-width">?</span> x <span id="margin-height">?</span>px
                    </div>
                </div>
            </div>
        </div>
        
        <div class="demo-section">
            <h2>box-sizing プロパティ</h2>
            <p>CSSの <code>box-sizing</code> プロパティは、要素の寸法計算方法を定義します。主に2つの値があります：</p>
            
            <div class="box-sizing-demo">
                <div class="box-demo">
                    <h3>content-box (デフォルト)</h3>
                    <p>width と height プロパティはコンテントのサイズのみを指定し、パディングとボーダーは追加されます。</p>
                    
                    <div class="demo-box content-box-demo">
                        コンテント
                        <span class="measurement-label width-label">width: 200px</span>
                        <span class="measurement-label total-width-label">実際の幅: 260px</span>
                    </div>
                    
                    <code>
                        width: 200px;<br>
                        padding: 20px;<br>
                        border: 10px solid blue;<br>
                        box-sizing: content-box; /* デフォルト */
                    </code>
                    
                    <p>合計幅 = 200px (コンテント) + 40px (左右パディング) + 20px (左右ボーダー) = 260px</p>
                </div>
                
                <div class="box-demo">
                    <h3>border-box</h3>
                    <p>width と height プロパティにパディングとボーダーが含まれます。よりレイアウトしやすくなります。</p>
                    
                    <div class="demo-box border-box-demo">
                        コンテント
                        <span class="measurement-label width-label">width: 200px</span>
                        <span class="measurement-label total-width-label">実際の幅: 200px</span>
                    </div>
                    
                    <code>
                        width: 200px;<br>
                        padding: 20px;<br>
                        border: 10px solid blue;<br>
                        box-sizing: border-box;
                    </code>
                    
                    <p>合計幅 = 200px (コンテント + パディング + ボーダー)</p>
                </div>
            </div>
            
            <div class="note">
                <h3>ヒント: box-sizing: border-box の利点</h3>
                <p>多くのCSSフレームワークやリセットでは <code>box-sizing: border-box</code> を使用します：</p>
                <code>
                    * {<br>
                        box-sizing: border-box;<br>
                    }
                </code>
                <p>これにより、要素の寸法計算が直感的になり、パディングやボーダーを追加してもレイアウトが崩れにくくなります。</p>
            </div>
        </div>
        
        <div class="demo-section">
            <h2>実用的な例</h2>
            
            <div class="example-section">
                <h3>例1: 2つのカラムレイアウト</h3>
                <p>横に並ぶ2つのカラムを作る場合、box-sizingの違いで結果が大きく変わります。</p>
                
                <div class="example-boxes content-box-example">
                    <div class="example-box" style="width: 50%; padding: 20px; border: 2px solid #3498db; box-sizing: content-box;">
                        幅50%<br>+ パディング<br>+ ボーダー<br>(content-box)
                    </div>
                    <div class="example-box" style="width: 50%; padding: 20px; border: 2px solid #3498db; box-sizing: content-box;">
                        幅50%<br>+ パディング<br>+ ボーダー<br>(content-box)
                    </div>
                </div>
                
                <div class="example-boxes border-box-example" style="display: none;">
                    <div class="example-box" style="width: 50%; padding: 20px; border: 2px solid #3498db; box-sizing: border-box;">
                        幅50%<br>(パディングとボーダーを含む)<br>(border-box)
                    </div>
                    <div class="example-box" style="width: 50%; padding: 20px; border: 2px solid #3498db; box-sizing: border-box;">
                        幅50%<br>(パディングとボーダーを含む)<br>(border-box)
                    </div>
                </div>
                
                <button class="example-toggle" id="layout-toggle">border-boxに切り替え</button>
            </div>
        </div>
        
        <div class="demo-section">
            <h2>日常生活での例え</h2>
            
            <table class="comparison-table">
                <tr>
                    <th>ボックスモデル要素</th>
                    <th>家の例え</th>
                    <th>本の例え</th>
                    <th>スマホの例え</th>
                </tr>
                <tr>
                    <td><strong>コンテント</strong></td>
                    <td>家の中の居住スペース</td>
                    <td>本の中のテキストや図</td>
                    <td>スマホの画面に表示される内容</td>
                </tr>
                <tr>
                    <td><strong>パディング</strong></td>
                    <td>壁と家具の間の空間</td>
                    <td>テキストと本の端の間の余白</td>
                    <td>画面内容と画面端の間の余白</td>
                </tr>
                <tr>
                    <td><strong>ボーダー</strong></td>
                    <td>家の壁や外壁</td>
                    <td>本の表紙</td>
                    <td>スマホのケース</td>
                </tr>
                <tr>
                    <td><strong>マージン</strong></td>
                    <td>家の庭や隣家との距離</td>
                    <td>本と本の間の本棚のスペース</td>
                    <td>テーブルの上でスマホとスマホの間の距離</td>
                </tr>
            </table>
        </div>
    </div>
    
    <script>
        // ボックスモデルデモの要素を取得
        const marginBox = document.querySelector('.margin-box');
        const borderBox = document.querySelector('.border-box');
        const paddingBox = document.querySelector('.padding-box');
        const contentBox = document.querySelector('.content-box');
        
        // スライダーの要素を取得
        const marginSlider = document.getElementById('margin-slider');
        const borderSlider = document.getElementById('border-slider');
        const paddingSlider = document.getElementById('padding-slider');
        
        // 値表示要素を取得
        const marginValue = document.getElementById('margin-value');
        const borderValue = document.getElementById('border-value');
        const paddingValue = document.getElementById('padding-value');
        
        // サイズ表示要素を取得
        const contentWidthEl = document.getElementById('content-width');
        const contentHeightEl = document.getElementById('content-height');
        const paddingWidthEl = document.getElementById('padding-width');
        const paddingHeightEl = document.getElementById('padding-height');
        const borderWidthEl = document.getElementById('border-width');
        const borderHeightEl = document.getElementById('border-height');
        const marginWidthEl = document.getElementById('margin-width');
        const marginHeightEl = document.getElementById('margin-height');
        
        // レイアウト例のトグルボタン
        const layoutToggle = document.getElementById('layout-toggle');
        const contentBoxExample = document.querySelector('.content-box-example');
        const borderBoxExample = document.querySelector('.border-box-example');
        
        // ボックスモデルの更新関数
        function updateBoxModel() {
            const marginSize = 100 - marginSlider.value * 2;
            const borderSize = 100 - borderSlider.value * 2;
            const paddingSize = 100 - paddingSlider.value * 2;
            
            borderBox.style.width = marginSize + '%';
            borderBox.style.height = marginSize + '%';
            
            paddingBox.style.width = borderSize + '%';
            paddingBox.style.height = borderSize + '%';
            
            contentBox.style.width = paddingSize + '%';
            contentBox.style.height = paddingSize + '%';
            
            // 値の表示を更新
            marginValue.textContent = marginSlider.value;
            borderValue.textContent = borderSlider.value;
            paddingValue.textContent = paddingSlider.value;
            
            // サイズの計算と表示
            updateDimensions();
        }
        
        // サイズ表示の更新関数
        function updateDimensions() {
            const demo = document.querySelector('.box-model-demo');
            const demoRect = demo.getBoundingClientRect();
            const marginRect = marginBox.getBoundingClientRect();
            const borderRect = borderBox.getBoundingClientRect();
            const paddingRect = paddingBox.getBoundingClientRect();
            const contentRect = contentBox.getBoundingClientRect();
            
            contentWidthEl.textContent = Math.round(contentRect.width);
            contentHeightEl.textContent = Math.round(contentRect.height);
            
            paddingWidthEl.textContent = Math.round(paddingRect.width);
            paddingHeightEl.textContent = Math.round(paddingRect.height);
            
            borderWidthEl.textContent = Math.round(borderRect.width);
            borderHeightEl.textContent = Math.round(borderRect.height);
            
            marginWidthEl.textContent = Math.round(marginRect.width);
            marginHeightEl.textContent = Math.round(marginRect.height);
        }
        
        // レイアウト例のトグル
        layoutToggle.addEventListener('click', function() {
            if (contentBoxExample.style.display === 'none') {
                contentBoxExample.style.display = 'flex';
                borderBoxExample.style.display = 'none';
                layoutToggle.textContent = 'border-boxに切り替え';
            } else {
                contentBoxExample.style.display = 'none';
                borderBoxExample.style.display = 'flex';
                layoutToggle.textContent = 'content-boxに切り替え';
            }
        });
        
        // イベントリスナーを設定
        marginSlider.addEventListener('input', updateBoxModel);
        borderSlider.addEventListener('input', updateBoxModel);
        paddingSlider.addEventListener('input', updateBoxModel);
        
        // ウィンドウリサイズ時にサイズ表示を更新
        window.addEventListener('resize', updateDimensions);
        
        // 初期化
        updateBoxModel();
    </script>
</body>
</html>
